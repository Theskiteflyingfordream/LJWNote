第二场面试43min

1、TCP和UDP的差别？
TCP：面向连接；可靠性；报文头20-60个字节；面向字节流，应用层发送的报文长度和接受的不一定一样，但是字节流一定相同；存在拥塞控制和流量控制等机制
UDP：面向无连接；尽最大努力的交付；报文头8个字节；面向报文，应用层下来的报文，不会拆开，加上UDP报文头后直接给网络层；

2、TCP如何保证可靠的？
对每一个有效字节编号，停止等待ARQ和连续ARQ；拥塞控制和流量控制
https://wenku.baidu.com/view/abaa599e950590c69ec3d5bbfd0a79563c1ed4fa.html

3、TCP的拥塞控制和流量控制？
流量控制是干嘛的说了一下，然后说了流量控制的实现（接收方的ACK报文上带有窗口大小，发送方通过这个控制发送方的发送窗口）；
拥塞控制是干嘛的说了一下，然后大白话说了拥塞控制的四个阶段；

4、介绍一下HTTP1.x和2.0和3.0的区别？
HTTP1.1比1.0：长连接；管道网络运输（服务端出现队头阻塞）；引入了更多的缓存策略；断点续传
HTTP2.0比1.x：用header field进行header压缩；服务端推送；每一个请求或响应对应的所有报文为一个数据流，不同数据流可以并发，不会出现队头阻塞；
HTTP3.0：基于UDP的QUIC，HTTP2.0因为复用一个TCP，一个报文超时重传，就会把后面所有数据流阻塞，3.0时，只会阻塞当前数据流；

5、什么时候用线程，什么时候用进程？
我先说了线程和进程的区别，一个资源分配的单位，一个调度的单位，线程共享进程的资源，没有内存隔离；然后说需要稳定或调试的话，用进程，频繁创建销毁或者切换，用线程（反问建议的时候，面试官说其实资源少的时候也应该用线程）

6、flush的作用？
把缓冲区中的东西刷到文件中；

7、flush是刷哪里的东西？
没答上来

8、pagecache的作用？
IO的时候，首先从磁盘读到pagecache，也就是内核缓冲区，再读到用户缓冲区；pagecache提供了预读机制，利用了程序的局部性原理；

9、pagecache什么时候会刷？
没答上来（面试官回答，和脏页率有关）

10、Java的线程池？想了一会（线程池这里，我还看过它的实现来着，一时忘记了，后悔），面试官说，或者Java的线程状态？
我说了创建、终止、blocked、time_waited、waited、Runnable、Running几种状态，以及调用什么方法，状态间转换；面试官说没有Running状态，我补充了由于时间片太小，区分Running和Runnable没意义，所以没有Running状态；

11、MySQL的索引？
我从B树，B+树，Hash三种数据结构的差别来答；

12、MySQL更新一条数据的时候，对应的索引是同步更新的还是异步更新的？
没答上来

13、volatile有什么用？
简易的同步机制，能够保证有序性和可见性，和sychronize区别就是它不能保证原子性；

如何保证有序性？
先答了指令重排是什么，然后答了重排满足as-if-serial语义，不会影响单线程，但是多线程有问题；volatile域写前后分别有storestore指令，volatile域读后依次有loadload和loadstore指令，解释了他们的作用；

如何保证可见性？
做法是写后插入写屏障，读前插入读屏障；
从JMM的角度来答：本地内存和主存；
从CPU的一些优化角度来答：有了MESI为什么还要volatile，因为storebuffer+invalidateQueue；